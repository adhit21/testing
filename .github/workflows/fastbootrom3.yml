name: MIUI Firmware fastboot Extractor v4

on:
  workflow_dispatch:
    inputs:
      download_url:
        description: 'URL file firmware'
        required: true
      output_name:
        description: 'Pilih jenis image'
        type: choice
        required: true
        options:
          - boot.img
          - system.img
          - logo.bin
          - dtbo.img
          - vbmeta.img
          - scatter.txt

jobs:
  extract-firmware:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y unzip zip curl tar jq

    - name: Extract metadata from URL
      id: extract_meta
      run: |
        URL="${{ github.event.inputs.download_url }}"
        
        # Ekstrak version
        VERSION=$(echo "$URL" | sed -n 's|.*/\(V[^/]*\)/.*|\1|p')
        
        # Ekstrak codename dengan pattern lebih spesifik
        CODENAME=$(echo "$URL" | sed -n 's|.*/\(.*\)_global_images.*|\1|p')
        
        if [ -z "$VERSION" ] || [ -z "$CODENAME" ]; then
          echo "::error::Gagal ekstrak metadata dari URL!"
          exit 1
        fi
        
        echo "::set-output name=version::${VERSION}"
        echo "::set-output name=codename::${CODENAME}"

    - name: Check existing release asset
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      run: |
        TAG="${{ steps.extract_meta.outputs.codename }}-${{ steps.extract_meta.outputs.version }}"
        ASSET_NAME="${{ github.event.inputs.output_name }}_${{ steps.extract_meta.outputs.version }}.zip"

        echo "🔍 Cek asset $ASSET_NAME di release $TAG…"
        RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG")

        # Jika release tidak ditemukan, lanjut ke proses download
        if echo "$RESPONSE" | jq -e 'has("message") and .message == "Not Found"' >/dev/null; then
          echo "Release $TAG belum ada, lanjut proses."
        else
          # Cek apakah asset dengan nama yang sama sudah ada
          if echo "$RESPONSE" | jq -e --arg name "$ASSET_NAME" '.assets[] | select(.name == $name)' >/dev/null; then
            echo "✅ File $ASSET_NAME sudah tersedia. Proses dibatalkan."
            exit 1
          else
            echo "Asset $ASSET_NAME belum ada di release $TAG, lanjut proses."
          fi
        fi

    - name: Download file
      run: |
        curl -L "${{ github.event.inputs.download_url }}" -o input_file.tgz

    - name: Extract files
      run: |
        mkdir -p output
        tar -xvzf input_file.tgz -C output

    - name: Package image file
      run: |
        FILE_PATH=$(find output -type f -name "${{ github.event.inputs.output_name }}" | head -n1)
        OUTPUT_FILE="${{ github.event.inputs.output_name }}_${{ steps.extract_meta.outputs.version }}.zip"
        
        if [ ! -f "$FILE_PATH" ]; then
          echo "::error::File ${{ github.event.inputs.output_name }} tidak ditemukan!"
          exit 1
        fi
        
        zip "$OUTPUT_FILE" "$FILE_PATH"
        echo "OUTPUT_FILE=$OUTPUT_FILE" >> $GITHUB_ENV

    - name: Upload ke GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "${{ steps.extract_meta.outputs.codename }}-${{ steps.extract_meta.outputs.version }}"
        name: "${{ steps.extract_meta.outputs.codename }} ${{ steps.extract_meta.outputs.version }}"
        files: |
          ${{ env.OUTPUT_FILE }}
        draft: false
        prerelease: false
        generate_release_notes: true
        create_release: true
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
